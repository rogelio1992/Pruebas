<?php
/**
 * @file
 * Contains
 */
namespace Drupal\rspvlist\Form;
use Drupal\Core\Url;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;

/*
 * Provides an RSPV Email Form
 */
 class RSVPListForm extends FormBase {
   /*
    * (@inheritdoc)
    */
   public function getFormId()
   {
    return 'rspvlist_email_form';
     // TODO: Implement getFormId() method.
   }
   public function buildForm(array $form, FormStateInterface $form_state)
   {
     $node=\Drupal::routeMatch()->getParameter('node');
     $nid=$node->nid->value;


     $form['email'] = [
       '#title'=>$this->t('Email Adress'),
       '#type'=>'email',
       '#size'=>25,
       '#description'=>$this->t("Mandaremos actualizaciones al email que nos facilite"),
       '#required'=>TRUE,
     ];
     $form['submit'] = array(
       '#type'=>'submit',
       '#value'=>t('RSPV'),
     );
     $form['nid']=array(
       '#type'=>'hidden',
       '#value'=>$nid,
     );
     return $form;
     // TODO: Implement buildForm() method.
   }
  /* public function validateForm(array &$form, FormStateInterface $form_state)
   {
     //parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
     $value=$form_state->getValue('email');
     if($value == !\Drupal::service('email.validator')->isValid($value)){
       $form_state->setErrorByName('email',t('El correo %mail no es valido',array('%mail'=>$value)));
     }
   }*/

   public function submitForm(array &$form, FormStateInterface $form_state)
   {
     //drupal_set_message(t('El formulario esta funcionando'));
     $this->messenger()->addMessage($this->t('Email enviado.'));
     // TODO: Implement submitForm() method.
   }
 }

